{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Documents\\\\Study\\\\Projects\\\\React Project\\\\Udemy-Projects\\\\QuotesRoutingProject\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment } from \"../../api/api\";\nimport useHttp from \"../../use-hook/use-http\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp({\n    url: `https://quotesroutingproject-default-rtdb.firebaseio.com/quotes/comments/${params.quotesId}.json`,\n    method: \"POST\"\n  }, addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    if (status === \"Completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const commentTextRef = useRef();\n\n  const submitFormHandler = event => {\n    event.preventDefault(); // send comment to server\n\n    sendRequest({\n      text: commentTextRef.current.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: status === \"Pending\" && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"SCVUK5exSh8SlvGTThV5DAoKFFM=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["C:/Users/Shivam/Documents/Study/Projects/React Project/Udemy-Projects/QuotesRoutingProject/src/components/comments/NewCommentForm.js"],"names":["useEffect","useRef","useParams","addComment","useHttp","LoadingSpinner","classes","NewCommentForm","props","params","sendRequest","status","error","url","quotesId","method","onAddedComment","commentTextRef","submitFormHandler","event","preventDefault","text","current","value","form","control","actions"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAiCR,OAAO,CAC5C;AACES,IAAAA,GAAG,EAAG,4EAA2EJ,MAAM,CAACK,QAAS,OADnG;AAEEC,IAAAA,MAAM,EAAE;AAFV,GAD4C,EAK5CZ,UAL4C,CAA9C;AAOA,QAAM;AAAEa,IAAAA;AAAF,MAAqBR,KAA3B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,KAAK,WAAX,IAA0B,CAACC,KAA/B,EAAsC;AACpCI,MAAAA,cAAc;AACf;AACF,GAJQ,EAIN,CAACL,MAAD,EAASC,KAAT,EAAgBI,cAAhB,CAJM,CAAT;AAMA,QAAMC,cAAc,GAAGhB,MAAM,EAA7B;;AAEA,QAAMiB,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAGnC;;AACAV,IAAAA,WAAW,CAAC;AAAEW,MAAAA,IAAI,EAAEJ,cAAc,CAACK,OAAf,CAAuBC;AAA/B,KAAD,CAAX;AACD,GALD;;AAOA,sBACE;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACkB,IAAzB;AAA+B,IAAA,QAAQ,EAAEN,iBAAzC;AAAA,4BACE;AAAA,gBAAMP,MAAM,KAAK,SAAX,iBAAwB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACmB,OAAxB;AAAiC,MAAA,QAAQ,EAAEP,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACoB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;GAAMnB,c;UACWL,S,EACwBE,O;;;KAFnCG,c;AAwCN,eAAeA,cAAf","sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { addComment } from \"../../api/api\";\r\nimport useHttp from \"../../use-hook/use-http\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nimport classes from \"./NewCommentForm.module.css\";\r\n\r\nconst NewCommentForm = (props) => {\r\n  const params = useParams();\r\n  const { sendRequest, status, error } = useHttp(\r\n    {\r\n      url: `https://quotesroutingproject-default-rtdb.firebaseio.com/quotes/comments/${params.quotesId}.json`,\r\n      method: \"POST\",\r\n    },\r\n    addComment\r\n  );\r\n  const { onAddedComment } = props;\r\n\r\n  useEffect(() => {\r\n    if (status === \"Completed\" && !error) {\r\n      onAddedComment();\r\n    }\r\n  }, [status, error, onAddedComment]);\r\n\r\n  const commentTextRef = useRef();\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // send comment to server\r\n    sendRequest({ text: commentTextRef.current.value });\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitFormHandler}>\r\n      <div>{status === \"Pending\" && <LoadingSpinner />}</div>\r\n      <div className={classes.control} onSubmit={submitFormHandler}>\r\n        <label htmlFor=\"comment\">Your Comment</label>\r\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className=\"btn\">Add Comment</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCommentForm;\r\n"]},"metadata":{},"sourceType":"module"}