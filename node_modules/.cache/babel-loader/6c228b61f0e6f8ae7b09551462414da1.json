{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Documents\\\\Study\\\\Projects\\\\React Project\\\\Udemy-Projects\\\\QuotesRoutingProject\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { getAllQuotes } from \"../api/api\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../use-hook/use-http\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest: fetchData,\n    status,\n    error,\n    data: quotesData\n  } = useHttp({\n    url: \"https://quotesroutingproject-default-rtdb.firebaseio.com/quotes.json\"\n  }, getAllQuotes, true);\n  useEffect(() => {\n    let unmount = false;\n\n    if (!unmount) {\n      fetchData();\n    }\n\n    return () => {\n      unmount = true;\n    };\n  }, []);\n\n  if (status === \"Pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === \"Completed\" && error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"Completed\" && (!quotesData || quotesData.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(quotesData);\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: quotesData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"NhpCtsN1iK02NTYRD5SRAo4BSSw=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/Shivam/Documents/Study/Projects/React Project/Udemy-Projects/QuotesRoutingProject/src/pages/AllQuotes.js"],"names":["useEffect","getAllQuotes","QuoteList","LoadingSpinner","useHttp","NoQuotesFound","AllQuotes","sendRequest","fetchData","status","error","data","quotesData","url","unmount","length","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AACJC,IAAAA,WAAW,EAAEC,SADT;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,IAAI,EAAEC;AAJF,MAKFR,OAAO,CACT;AACES,IAAAA,GAAG,EAAE;AADP,GADS,EAITZ,YAJS,EAKT,IALS,CALX;AAaAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,OAAO,GAAG,KAAd;;AACA,QAAI,CAACA,OAAL,EAAc;AACZN,MAAAA,SAAS;AACV;;AACD,WAAO,MAAM;AACXM,MAAAA,OAAO,GAAG,IAAV;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIL,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIA,MAAM,KAAK,WAAX,IAA0BC,KAA9B,EAAqC;AACnC,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAID,MAAM,KAAK,WAAX,KAA2B,CAACG,UAAD,IAAeA,UAAU,CAACG,MAAX,KAAsB,CAAhE,CAAJ,EAAwE;AACtE,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3CD;;GAAMN,S;UAMAF,O;;;KANAE,S;AA4CN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { getAllQuotes } from \"../api/api\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../use-hook/use-http\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest: fetchData,\r\n    status,\r\n    error,\r\n    data: quotesData,\r\n  } = useHttp(\r\n    {\r\n      url: \"https://quotesroutingproject-default-rtdb.firebaseio.com/quotes.json\",\r\n    },\r\n    getAllQuotes,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    let unmount = false;\r\n    if (!unmount) {\r\n      fetchData();\r\n    }\r\n    return () => {\r\n      unmount = true;\r\n    };\r\n  }, []);\r\n\r\n  if (status === \"Pending\") {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === \"Completed\" && error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"Completed\" && (!quotesData || quotesData.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  console.log(quotesData);\r\n\r\n  return <QuoteList quotes={quotesData} />;\r\n};\r\nexport default AllQuotes;\r\n"]},"metadata":{},"sourceType":"module"}