{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Documents\\\\Study\\\\Projects\\\\React Project\\\\Udemy-Projects\\\\QuotesRoutingProject\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { getAllComments } from \"../../api/api\";\nimport useHttp from \"../../use-hook/use-http\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    data,\n    status\n  } = useHttp({\n    url: `https://quotesroutingproject-default-rtdb.firebaseio.com/quotes/comments/${params.quotesId}.json`\n  }, getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest();\n  }, []);\n  let comment;\n\n  if (status === \"Pending\") {\n    comment = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (status === \"Completed\" && (data || data.length > 0)) {\n    comment = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (status === \"Completed\" && (!data || data.length === 0)) {\n    comment = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments are added yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), comment]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"i/0f67D3f6VJebTIiFPwp/VALbI=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Shivam/Documents/Study/Projects/React Project/Udemy-Projects/QuotesRoutingProject/src/components/comments/Comments.js"],"names":["useCallback","useEffect","useState","getAllComments","useHttp","useParams","classes","NewCommentForm","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","sendRequest","data","status","url","quotesId","startAddCommentHandler","comment","length","addedCommentHandler","comments"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMW,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,MAAgCZ,OAAO,CAC3C;AACEa,IAAAA,GAAG,EAAG,4EAA2EJ,MAAM,CAACK,QAAS;AADnG,GAD2C,EAI3Cf,cAJ2C,CAA7C;;AAOA,QAAMgB,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIM,OAAJ;;AACA,MAAIJ,MAAM,KAAK,SAAf,EAA0B;AACxBI,IAAAA,OAAO,gBACL;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIJ,MAAM,KAAK,WAAX,KAA2BD,IAAI,IAAIA,IAAI,CAACM,MAAL,GAAc,CAAjD,CAAJ,EAAyD;AACvDD,IAAAA,OAAO,gBAAG,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEL;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAED,MAAIC,MAAM,KAAK,WAAX,KAA2B,CAACD,IAAD,IAASA,IAAI,CAACM,MAAL,KAAgB,CAApD,CAAJ,EAA4D;AAC1DD,IAAAA,OAAO,gBACL;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAME,mBAAmB,GAAGtB,WAAW,CAAC,MAAM;AAC5Cc,IAAAA,WAAW;AACZ,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACE;AAAS,IAAA,SAAS,EAAER,OAAO,CAACiB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACZ,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBACd,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAEW;AAAhC;AAAA;AAAA;AAAA;AAAA,YARJ,EAUGF,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzDD;;GAAMV,Q;UAEWL,S,EACuBD,O;;;KAHlCM,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { getAllComments } from \"../../api/api\";\r\nimport useHttp from \"../../use-hook/use-http\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport classes from \"./Comments.module.css\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport CommentsList from \"./CommentsList\";\r\n\r\nconst Comments = () => {\r\n  const [isAddingComment, setIsAddingComment] = useState(false);\r\n  const params = useParams();\r\n  const { sendRequest, data, status } = useHttp(\r\n    {\r\n      url: `https://quotesroutingproject-default-rtdb.firebaseio.com/quotes/comments/${params.quotesId}.json`,\r\n    },\r\n    getAllComments\r\n  );\r\n\r\n  const startAddCommentHandler = () => {\r\n    setIsAddingComment(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, []);\r\n\r\n  let comment;\r\n  if (status === \"Pending\") {\r\n    comment = (\r\n      <div className=\"centered focused\">\r\n        <LoadingSpinner />;\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === \"Completed\" && (data || data.length > 0)) {\r\n    comment = <CommentsList comments={data} />;\r\n  }\r\n\r\n  if (status === \"Completed\" && (!data || data.length === 0)) {\r\n    comment = (\r\n      <div className=\"centered\">\r\n        <p>No comments are added yet!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const addedCommentHandler = useCallback(() => {\r\n    sendRequest();\r\n  }, []);\r\n\r\n  return (\r\n    <section className={classes.comments}>\r\n      <h2>User Comments</h2>\r\n      {!isAddingComment && (\r\n        <button className=\"btn\" onClick={startAddCommentHandler}>\r\n          Add a Comment\r\n        </button>\r\n      )}\r\n      {isAddingComment && (\r\n        <NewCommentForm onAddedComment={addedCommentHandler} />\r\n      )}\r\n      {comment}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}