{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\Documents\\\\Study\\\\Projects\\\\React Project\\\\Udemy-Projects\\\\QuotesRoutingProject\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport HighLightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../use-hook/use-http\";\nimport { getSingleQuote } from \"../api/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: quote\n  } = useHttp({\n    url: `https://quotesroutingproject-default-rtdb.firebaseio.com/quotes/${params.quotesId}.json`,\n    params: params.quotesId\n  }, getSingleQuote);\n  useEffect(() => {\n    sendRequest();\n  }, []);\n  const match = useRouteMatch();\n  console.log(match);\n\n  if (status === \"Completed\" && !quote.text) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"Completed\") {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(HighLightedQuote, {\n        text: quote.text,\n        author: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: match.path,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \" btn--flat\",\n            to: `${match.url}/comments`,\n            children: \"Load Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/comments`,\n        children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered\",\n    children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"9PfYLGX3bKZSnBv0+i2/kYtqaOA=\", false, function () {\n  return [useParams, useHttp, useRouteMatch];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/Shivam/Documents/Study/Projects/React Project/Udemy-Projects/QuotesRoutingProject/src/pages/QuoteDetails.js"],"names":["Link","Route","useParams","useRouteMatch","Comments","NoQuotesFound","HighLightedQuote","useHttp","getSingleQuote","useEffect","LoadingSpinner","QuoteDetails","params","sendRequest","status","data","quote","url","quotesId","match","console","log","text","author","path"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AACJW,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC;AAHF,MAIFT,OAAO,CACT;AACEU,IAAAA,GAAG,EAAG,mEAAkEL,MAAM,CAACM,QAAS,OAD1F;AAEEN,IAAAA,MAAM,EAAEA,MAAM,CAACM;AAFjB,GADS,EAKTV,cALS,CAJX;AAYAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMM,KAAK,GAAGhB,aAAa,EAA3B;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,MAAIL,MAAM,KAAK,WAAX,IAA0B,CAACE,KAAK,CAACM,IAArC,EAA2C;AACzC,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIR,MAAM,KAAK,WAAf,EAA4B;AAC1B,wBACE;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEE,KAAK,CAACM,IAA9B;AAAoC,QAAA,MAAM,EAAEN,KAAK,CAACO;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEJ,KAAK,CAACK,IAAnB;AAAyB,QAAA,KAAK,MAA9B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,YAAhB;AAA6B,YAAA,EAAE,EAAG,GAAEL,KAAK,CAACF,GAAI,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACK,IAAK,WAA3B;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjDD;;GAAMb,Y;UACWT,S,EAKXK,O,EAYUJ,a;;;KAlBVQ,Y;AAkDN,eAAeA,YAAf","sourcesContent":["import { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport HighLightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../use-hook/use-http\";\r\nimport { getSingleQuote } from \"../api/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetails = () => {\r\n  const params = useParams();\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: quote,\r\n  } = useHttp(\r\n    {\r\n      url: `https://quotesroutingproject-default-rtdb.firebaseio.com/quotes/${params.quotesId}.json`,\r\n      params: params.quotesId,\r\n    },\r\n    getSingleQuote\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const match = useRouteMatch();\r\n  console.log(match);\r\n\r\n  if (status === \"Completed\" && !quote.text) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  if (status === \"Completed\") {\r\n    return (\r\n      <section>\r\n        <HighLightedQuote text={quote.text} author={quote.author} />\r\n        <Route path={match.path} exact>\r\n          <div className=\"centered\">\r\n            <Link className=\" btn--flat\" to={`${match.url}/comments`}>\r\n              Load Comments\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n\r\n        {/* <Route path=\"/quotes/:quotesId/comments\"> */}\r\n        <Route path={`${match.path}/comments`}>\r\n          <Comments />\r\n        </Route>\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"centered\">\r\n      <LoadingSpinner />;\r\n    </div>\r\n  );\r\n};\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}